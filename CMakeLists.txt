cmake_minimum_required(VERSION 4.0)
project(game)

set(CMAKE_EXECUTABLE_SUFFIX ".js")
set(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 17)
set(SUPPORT_FILEFORMAT_SVG)

# Add compiler flags to handle implicit function declarations (treat as warning, not error)
add_compile_options(-Wno-error=implicit-function-declaration)

# Source files
set(SOURCES
    src/main.cpp
    src/player.cpp
    src/map.cpp
    src/gun.cpp
    src/ui.cpp
)

add_executable(${PROJECT_NAME} ${SOURCES})

# Copy assets folder to build directory for web builds
add_custom_command(TARGET ${PROJECT_NAME} PRE_LINK
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    ${CMAKE_SOURCE_DIR}/assets ${CMAKE_BINARY_DIR}/assets
    COMMENT "Copying assets to build directory"
)

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -s USE_GLFW=3 -s ASSERTIONS=1 -s WASM=1 -s ASYNCIFY -s ERROR_ON_UNDEFINED_SYMBOLS=0 -sALLOW_MEMORY_GROWTH -sEXPORTED_RUNTIME_METHODS=printErr,HEAPF32 --bind --memory --preload-file assets -s STACK_SIZE=131072")

# Include directories
include_directories(lib/raylib/src)
include_directories(include)

# Configure and add raylib for web platform
if(NOT DEFINED PLATFORM)
    set(PLATFORM "Web" CACHE STRING "")
endif()
add_subdirectory(lib/raylib EXCLUDE_FROM_ALL)

# Link libraries
target_link_libraries(${PROJECT_NAME} raylib)